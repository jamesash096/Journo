{"version":3,"sources":["components/homeArticlesList.js","pages/article-content.js","pages/HomePage.js","pages/About.js","components/ArticlesList.js","pages/ArticleListPage.js","components/CommentsList.js","components/Upvote.js","pages/NoPage.js","components/AddComments.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomeArticlesList","articles","map","article","key","className","to","name","title","content","substring","HomePage","articleContent","AboutPage","ArticlesList","ArticleListPage","CommentsList","comments","comment","userName","commentText","Upvote","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","NoPage","AddComments","useState","setUserName","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","NavBar","App","path","component","exact","About","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2bf1404c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst HomeArticlesList = ({ articles }) => (\n    <>\n        {\n            articles.map((article,key) => (\n                <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\n                    <h3>\n                        {article.title}\n                    </h3>\n                    <p>\n                        {article.content[0].substring(0,1000)}...\n                    </p>\n                </Link>\n            ))\n        }\n    </>\n);\n\nexport default HomeArticlesList;","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'what-is-life',\n        title: 'What is the Meaning of Life?',\n        content: [\n            `The question of the meaning of life is perhaps one that we would rather not ask, \n            for fear of the answer or lack thereof. Still today, many people believe that we, \n            humankind, are the creation of a supernatural entity called God, that God had an \n            intelligent purpose in creating us, and that this intelligent purpose is \"the meaning of life\". \n            I do not propose to rehearse the various arguments for and against the existence of God,\n            and still less to take a side. But even if God exists, and even if He had an intelligent \n            purpose in creating us, no one really knows what this purpose might be, or that it is \n            especially meaningful.`,\n            `The Second Law of Thermodynamics states that the entropy of a closed system such \n            as the universe increases up to the point at which equilibrium is reached, and God’s \n            purpose in creating us, and, indeed, all of nature, might have been no more lofty or\n            uplifting than to catalyse this process in the same manner that soil organisms catalyse \n            the decomposition of organic matter. If our God-given purpose is to act as super-efficient \n            heat dissipators, then having no purpose at all is better than having this sort of purpose\n            —because it frees us to be the authors of our purpose or purposes and so to lead truly \n            dignified and meaningful lives. In fact, having no purpose at all is better than having any \n            kind of pre-determined purpose, even more traditional, uplifting ones such as serving God \n            or improving our karma.`,\n            `To put it in Sartrean (or existentialist) terms, whereas for the galet it is true only \n            that existence precedes essence, for the sock it is true both that essence precedes existence \n            (when the sock is used on a human foot) and that existence precedes essence (when the sock is \n            used for an unintended purpose, for example, as a bottle sleeve). We human beings are either \n            like the rock or the sock, but whichever we are like, we are better off creating our own purpose \n            or purposes. Plato once defined man as an animal, biped, featherless, and with broad nails \n            (thereby excluding plucked chickens); but another, much better definition that he gave was simply \n            this: \"A being in search of meaning.\" Human life may not have been created with any pre-determined \n            purpose, but this need not mean that it cannot have a purpose, or that this purpose cannot be just \n            as good as, if not much better than, any pre-determined one. And so the meaning of life, of our life,\n            is that which we choose to give it.`,\n        ]\n    },     {\n        name: 'yojimbo',\n        title: 'Yojimbo - A review by Roger Ebert',\n        content: [\n            `Almost the first thing the samurai sees when he arrives is a dog trotting down \n            the main street with a human hand in its mouth. The town seems deserted until a \n            nervous little busybody darts out and offers to act as an employment service: \n            He'll get the samurai a job as a yojimbo -- a bodyguard. The samurai, a large, \n            dusty man with indifference bordering on insolence, listens and does not commit. \n            He wants sake and something to eat. So opens \"Yojimbo\" (1961), Akira Kurosawa's \n            most popular film in Japan. He was deliberately combining the samurai story with \n            the Western, so that the wind-swept main street could be in any frontier town, \n            the samurai (Toshiro Mifune) could be a gunslinger, and the local characters could \n            have been lifted from John Ford's gallery of supporting actors.`,\n            `Richie, whose writings on Kurosawa are invaluable, notes that Kurosawa's shots are \n            always at right angles to what they show; they either look straight up and down the \n            street, or straight into or out of the buildings, and \"there are very few diagonal shots.\" \n            The purpose may be to emphasize the simplicity of the local situation: Two armies face each \n            other, the locals observe the main street as if it's a stage, and the samurai himself embodies \n            the diagonal -- the visitor who stands at an angle to everyone and upsets the balance of power. \n            Indeed, in a crucial early scene, as the two sides face each other nervously from either end of \n            the street and dart forward fearfully in gestures of attack, Sanjuro sits high above the action\n            in the central bell tower, looks down and is vastly amused.`,\n            `Richie believes \"Yojimbo\" is the best-photographed of Kurosawa's films (by Kazuo Miyagawa, who \n            also shot \"Rashomon\" and such other Japanese classics as Ozu's \"Floating Weeds\" and Mizoguchi's \n            \"Ugetsu\"). The wide screen is fully employed for dramatic compositions, as when the armies face \n            each other across an empty space. And there is a dramatic sense of depth in scenes were Sanjuro \n            holds the foreground while forces gather in the background. Shutters, sliding doors and foreground \n            objects bring events into view and then obscure them, and we get a sense of the town as a collection\n            of fearful eyes granted an uncertain view of certain danger`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\nimport HomeArticlesList from '../components/homeArticlesList';\nimport articleContent from './article-content';\n\nconst HomePage = () => (\n    <>\n        <h1>Journo</h1>\n        <HomeArticlesList articles={articleContent} />\n    </>\n)\n\nexport default HomePage;","import React from 'react';\n\nconst AboutPage = () => (\n    <>\n        <h1>About Me</h1>\n        <p>A software development engineer with 3 years of experience working in the Information Technology sphere on a variety of projects ranging from front-end development to application packaging</p>\n        <p>Maybe this site will be improved in the near future, maybe it won't.....Who knows??</p>\n    </>\n)\n\nexport default AboutPage","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst ArticlesList = ({ articles }) => (\n    <>\n        {\n            articles.map((article,key) => (\n                <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\n                    <h3>\n                        {article.title}\n                    </h3>\n                    <p>\n                        {article.content[0].substring(0,150)}...\n                    </p>\n                </Link>\n            ))\n        }\n    </>\n);\n\nexport default ArticlesList;","import React from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList'\n\nconst ArticleListPage = () => (\n    <>\n        <h1>Articles</h1>\n        <ArticlesList articles={articleContent} />\n    </>\n)\n\nexport default ArticleListPage;","import React from 'react'\n\nconst CommentsList = ({ comments }) => (    \n        <>\n        <h3>Comments:</h3>\n        {comments.map((comment,key) => (\n            \n            <div className=\"comment\" key={key}>\n                <h4>{comment.userName}</h4>\n                <p>{comment.commentText}</p>\n            </div>\n        ))}\n        </>\n)\n\nexport default CommentsList;","import React from 'react';\n\nconst Upvote = ({ articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body)\n    }\n    return (\n        <div id=\"upvotes-section\">\n            <button onClick={upvoteArticle}>Add Upvote</button>\n            <p>This article has been upvoted {upvotes} times</p>\n        </div>\n    );\n}\n\nexport default Upvote;","import React from 'react'\n\nconst NoPage = () => (\n    <h1>404: Page not found!</h1>\n);\n\nexport default NoPage;","import React, {useState} from 'react';\n\nconst AddComments = ({ articleName, setArticleInfo }) => {\n    const [userName, setUserName] = useState('');\n    const [commentText, setCommentText] = useState('');\n    \n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method:'post',\n            body: JSON.stringify({userName, commentText}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUserName('');\n        setCommentText('');\n    }\n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add a Comment</h3>\n            <label>\n                Name:\n                <input type=\"text\" value={userName} onChange={(event) => setUserName(event.target.value)}/>\n            </label>\n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}/>\n            </label>\n            <button onClick={() => addComment()}>Add Comment</button>\n        </div>\n    )\n};\n\nexport default AddComments;","import React, { useState, useEffect } from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport Upvote from '../components/Upvote';\nimport NoPage from './NoPage';\nimport AddComments from '../components/AddComments'\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name)\n    \n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]); //Empty array should be passed as a second argument to prevent infinite looping of the component\n\n    if(!article) return <NoPage />\n    const otherArticles = articleContent.filter(article => article.name !== name)\n\n    return(\n        <>\n            <h1>{article.title}</h1>\n            <Upvote articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n            {article.content.map((paragraph,key) => (\n                <p key={key}>{paragraph}</p>\n            ))}\n            <CommentsList comments={articleInfo.comments} />\n            <AddComments articleName={name} setArticleInfo={setArticleInfo} />\n            <h3>Other Articles:</h3>\n            <ArticlesList articles={otherArticles} />\n        </>\n    );\n}\n\nexport default ArticlePage;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/articles-list\">Articles</Link>\n            </li>\n        </ul>\n    </nav>\n)\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport HomePage from './pages/HomePage'\nimport About from './pages/About'\nimport ArticleListPage from './pages/ArticleListPage'\nimport ArticlePage from './pages/ArticlePage'\nimport NavBar from './NavBar'\nimport './App.css';\nimport NoPage from './pages/NoPage';\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <NavBar />\n        <div className=\"App\">\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact/>\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/articles-list\" component={ArticleListPage} />\n              <Route path=\"/article/:name\" component={ArticlePage} />\n              <Route component={NoPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}